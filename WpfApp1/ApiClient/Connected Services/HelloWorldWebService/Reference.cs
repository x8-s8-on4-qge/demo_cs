//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelloWorldWebService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://spring.io/guides/gs-producing-web-service", ConfigurationName="HelloWorldWebService.HelloWorldPort")]
    public interface HelloWorldPort
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<HelloWorldWebService.getHelloWorldResponse1> getHelloWorldAsync(HelloWorldWebService.getHelloWorldRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://spring.io/guides/gs-producing-web-service")]
    public partial class getHelloWorldRequest
    {
        
        private string paramField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string param
        {
            get
            {
                return this.paramField;
            }
            set
            {
                this.paramField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://spring.io/guides/gs-producing-web-service")]
    public partial class getHelloWorldResponse
    {
        
        private string messageField;
        
        public getHelloWorldResponse()
        {
            this.messageField = "default message.";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getHelloWorldRequest1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://spring.io/guides/gs-producing-web-service", Order=0)]
        public HelloWorldWebService.getHelloWorldRequest getHelloWorldRequest;
        
        public getHelloWorldRequest1()
        {
        }
        
        public getHelloWorldRequest1(HelloWorldWebService.getHelloWorldRequest getHelloWorldRequest)
        {
            this.getHelloWorldRequest = getHelloWorldRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getHelloWorldResponse1
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://spring.io/guides/gs-producing-web-service", Order=0)]
        public HelloWorldWebService.getHelloWorldResponse getHelloWorldResponse;
        
        public getHelloWorldResponse1()
        {
        }
        
        public getHelloWorldResponse1(HelloWorldWebService.getHelloWorldResponse getHelloWorldResponse)
        {
            this.getHelloWorldResponse = getHelloWorldResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface HelloWorldPortChannel : HelloWorldWebService.HelloWorldPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class HelloWorldPortClient : System.ServiceModel.ClientBase<HelloWorldWebService.HelloWorldPort>, HelloWorldWebService.HelloWorldPort
    {
        
        /// <summary>
        /// サービス エンドポイントを構成するには、この部分メソッドを実装してください。
        /// </summary>
        /// <param name="serviceEndpoint">構成するエンドポイント</param>
        /// <param name="clientCredentials">クライアントの資格情報です</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public HelloWorldPortClient() : 
                base(HelloWorldPortClient.GetDefaultBinding(), HelloWorldPortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.HelloWorldPortSoap11.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HelloWorldPortClient(EndpointConfiguration endpointConfiguration) : 
                base(HelloWorldPortClient.GetBindingForEndpoint(endpointConfiguration), HelloWorldPortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HelloWorldPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(HelloWorldPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HelloWorldPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(HelloWorldPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public HelloWorldPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HelloWorldWebService.getHelloWorldResponse1> HelloWorldWebService.HelloWorldPort.getHelloWorldAsync(HelloWorldWebService.getHelloWorldRequest1 request)
        {
            return base.Channel.getHelloWorldAsync(request);
        }
        
        public System.Threading.Tasks.Task<HelloWorldWebService.getHelloWorldResponse1> getHelloWorldAsync(HelloWorldWebService.getHelloWorldRequest getHelloWorldRequest)
        {
            HelloWorldWebService.getHelloWorldRequest1 inValue = new HelloWorldWebService.getHelloWorldRequest1();
            inValue.getHelloWorldRequest = getHelloWorldRequest;
            return ((HelloWorldWebService.HelloWorldPort)(this)).getHelloWorldAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.HelloWorldPortSoap11))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("名前 \'{0}\' のエンドポイントは見つかりません。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.HelloWorldPortSoap11))
            {
                return new System.ServiceModel.EndpointAddress("https://demo-latest-owxa.onrender.com/helloWorld/ws");
            }
            throw new System.InvalidOperationException(string.Format("名前 \'{0}\' のエンドポイントは見つかりません。", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return HelloWorldPortClient.GetBindingForEndpoint(EndpointConfiguration.HelloWorldPortSoap11);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return HelloWorldPortClient.GetEndpointAddress(EndpointConfiguration.HelloWorldPortSoap11);
        }
        
        public enum EndpointConfiguration
        {
            
            HelloWorldPortSoap11,
        }
    }
}
